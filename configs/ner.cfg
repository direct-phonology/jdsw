[paths]
train = "corpus/lzh_kyoto-ud-train.spacy"
dev = "corpus/lzh_kyoto-ud-dev.spacy"
test = "corpus/lzh_kyoto-ud-test.spacy"
vectors = null
init_tok2vec = null

[system]
gpu_allocator = null
seed = 0

[nlp]
lang = "zh"
pipeline = ["span_ruler","entity_ruler","ner","merge_entities"]
batch_size = 100
disabled = ["merge_entities"]
before_creation = null
after_creation = null
after_pipeline_creation = null

[nlp.tokenizer]
@tokenizers = "spacy.zh.ChineseTokenizer"
segmenter = "char"

[components]

[components.entity_ruler]
factory = "entity_ruler"
ent_id_sep = "||"
matcher_fuzzy_compare = {"@misc":"spacy.levenshtein_compare.v1"}
overwrite_ents = false
phrase_matcher_attr = null
scorer = {"@scorers":"spacy.entity_ruler_scorer.v1"}
validate = true

[components.merge_entities]
factory = "merge_entities"

[components.ner]
factory = "ner"
incorrect_spans_key = "sc"
moves = null
scorer = {"@scorers":"spacy.ner_scorer.v1"}
update_with_oracle_cut_size = 100

[components.ner.model]
@architectures = "spacy.TransitionBasedParser.v2"
state_type = "ner"
extra_state_tokens = false
hidden_width = 64
maxout_pieces = 2
use_upper = true
nO = null

[components.ner.model.tok2vec]
@architectures = "spacy.HashEmbedCNN.v2"
pretrained_vectors = null
width = 96
depth = 4
embed_size = 2000
window_size = 1
maxout_pieces = 3
subword_features = false

[components.span_ruler]
factory = "span_ruler"
annotate_ents = false
ents_filter = {"@misc":"spacy.first_longest_spans_filter.v1"}
matcher_fuzzy_compare = {"@misc":"spacy.levenshtein_compare.v1"}
overwrite = true
phrase_matcher_attr = null
spans_filter = null
spans_key = "sc"
validate = false

[components.span_ruler.scorer]
@scorers = "spacy.overlapping_labeled_spans_scorer.v1"
spans_key = "sc"

[corpora]

[corpora.dev]
@readers = "spacy.Corpus.v1"
path = ${paths.dev}
gold_preproc = false
max_length = 0
limit = 0
augmenter = null

[corpora.train]
@readers = "spacy.Corpus.v1"
path = ${paths.train}
gold_preproc = false
max_length = 0
limit = 0
augmenter = null

[training]
seed = ${system.seed}
gpu_allocator = ${system.gpu_allocator}
dropout = 0.1
accumulate_gradient = 1
patience = 1600
max_epochs = 0
max_steps = 20000
eval_frequency = 200
frozen_components = []
annotating_components = []
dev_corpus = "corpora.dev"
train_corpus = "corpora.train"
before_to_disk = null
before_update = null

[training.batcher]
@batchers = "spacy.batch_by_words.v1"
discard_oversize = false
tolerance = 0.2
get_length = null

[training.batcher.size]
@schedules = "compounding.v1"
start = 100
stop = 1000
compound = 1.001
t = 0.0

[training.logger]
@loggers = "spacy.ConsoleLogger.v1"
progress_bar = false

[training.optimizer]
@optimizers = "Adam.v1"
beta1 = 0.9
beta2 = 0.999
L2_is_weight_decay = true
L2 = 0.01
grad_clip = 1.0
use_averages = false
eps = 0.00000001
learn_rate = 0.001

[training.score_weights]
spans_ruler_f = null
spans_ruler_p = null
spans_ruler_r = null
spans_ruler_per_type = null
ents_f = 1
ents_p = 0.0
ents_r = 0.0
ents_per_type = null

[pretraining]

[initialize]
vocab_data = null
init_tok2vec = null
before_init = null
after_init = null
vectors = ${paths.vectors}
lookups = null

[initialize.components]

[initialize.components.entity_ruler]

[initialize.components.entity_ruler.patterns]
@readers = "srsly.read_jsonl.v1"
path = "corpus/ner_patterns.jsonl"
skip = false

[initialize.components.span_ruler]

[initialize.components.span_ruler.patterns]
@readers = "srsly.read_jsonl.v1"
path = "corpus/span_patterns.jsonl"
skip = false

[initialize.tokenizer]
pkuseg_model = null
pkuseg_user_dict = "default"
