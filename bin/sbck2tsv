#!/usr/bin/env python3

import pathlib

import typer
import pandas as pd

from lib.util import clean_text, split_text, krp_entity_unicode


def main(file: pathlib.Path) -> None:
    """
    Parse a SBCK edition text into base text and annotations/commentary.
    
    Outputs a .conll-like representation to stdout, where each unbroken
    sequence of characters is separated by a tab from its annotation or
    commentary, one pair per line.
    """

    # read unicode conversion table
    unicode_table = pd.read_csv("data/kr-unicode.csv")
    to_unicode = lambda entity: krp_entity_unicode(unicode_table, entity)

    # process source text
    with open(file, "r", encoding="utf-8") as f:
        text = f.read()
    text = clean_text(text, to_unicode)
    text = split_text(text, by_char=False)

    # write to stdout
    typer.echo(text.strip())


if __name__ == "__main__":
    typer.run(main)

__doc__ = main.__doc__  # type: ignore
